[{"C:\\Users\\jbaut\\Desktop\\Shopify Challenge Frontend\\app\\src\\index.js":"1","C:\\Users\\jbaut\\Desktop\\Shopify Challenge Frontend\\app\\src\\App.js":"2","C:\\Users\\jbaut\\Desktop\\Shopify Challenge Frontend\\app\\src\\api.js":"3","C:\\Users\\jbaut\\Desktop\\Shopify Challenge Frontend\\app\\src\\components\\Search\\index.js":"4","C:\\Users\\jbaut\\Desktop\\Shopify Challenge Frontend\\app\\src\\components\\Nominations\\index.js":"5","C:\\Users\\jbaut\\Desktop\\Shopify Challenge Frontend\\app\\src\\components\\SearchResults\\index.js":"6","C:\\Users\\jbaut\\Desktop\\Shopify Challenge Frontend\\app\\src\\components\\Result\\index.js":"7","C:\\Users\\jbaut\\Desktop\\Shopify Challenge Frontend\\app\\src\\components\\Info\\index.js":"8"},{"size":197,"mtime":1610229106119,"results":"9","hashOfConfig":"10"},{"size":4744,"mtime":1610307228903,"results":"11","hashOfConfig":"10"},{"size":761,"mtime":1610306990013,"results":"12","hashOfConfig":"10"},{"size":872,"mtime":1610305348998,"results":"13","hashOfConfig":"10"},{"size":1612,"mtime":1610305712546,"results":"14","hashOfConfig":"10"},{"size":1246,"mtime":1610307233871,"results":"15","hashOfConfig":"10"},{"size":1006,"mtime":1610304409349,"results":"16","hashOfConfig":"10"},{"size":2931,"mtime":1610307166505,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cwuno1",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"C:\\Users\\jbaut\\Desktop\\Shopify Challenge Frontend\\app\\src\\index.js",[],"C:\\Users\\jbaut\\Desktop\\Shopify Challenge Frontend\\app\\src\\App.js",["35","36"],"C:\\Users\\jbaut\\Desktop\\Shopify Challenge Frontend\\app\\src\\api.js",[],"C:\\Users\\jbaut\\Desktop\\Shopify Challenge Frontend\\app\\src\\components\\Search\\index.js",[],"C:\\Users\\jbaut\\Desktop\\Shopify Challenge Frontend\\app\\src\\components\\Nominations\\index.js",[],"C:\\Users\\jbaut\\Desktop\\Shopify Challenge Frontend\\app\\src\\components\\SearchResults\\index.js",["37"],"C:\\Users\\jbaut\\Desktop\\Shopify Challenge Frontend\\app\\src\\components\\Result\\index.js",[],"C:\\Users\\jbaut\\Desktop\\Shopify Challenge Frontend\\app\\src\\components\\Info\\index.js",["38"],"import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ClipLoader from 'react-spinners/ClipLoader';\r\n\r\nconst Info = ({ selectedMovie, loading }) => {\r\n    const {\r\n        Title,\r\n        Year,\r\n        Released,\r\n        Director,\r\n        Actors,\r\n        Plot,\r\n        Poster,\r\n        Awards,\r\n    } = selectedMovie;\r\n    console.log(selectedMovie);\r\n    return (\r\n        <Paper\r\n            style={{\r\n                backgroundColor: '#f4f6f8',\r\n                overflow: 'auto',\r\n                padding: '1rem 2rem',\r\n            }}\r\n        >\r\n            <Grid container direction=\"column\">\r\n                <Grid item>\r\n                    <Typography variant=\"h5\">\r\n                        About {`\"${Title} (${Year})\"`}\r\n                    </Typography>\r\n                </Grid>\r\n                {loading ? (\r\n                    <ClipLoader color=\"#008060\" loading={loading} size={25} />\r\n                ) : (\r\n                    <Grid container>\r\n                        <Grid item >\r\n                            {Poster !== 'N/A' && (\r\n                                <img src={Poster} style={{ width: 250 }} />\r\n                            )}\r\n                        </Grid>\r\n                        <Grid container direction=\"column\" style={{lineHeight: 0.05}}>\r\n                            <Grid item>\r\n                                <Typography variant=\"caption\">\r\n                                    Released in {Released}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography variant=\"caption\">\r\n                                    Directed by: {Director}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography variant=\"caption\">\r\n                                    {Actors}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography variant=\"caption\">\r\n                                    {Awards}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        \r\n                        <Grid item style={{marginTop: \"1vh\"}}>\r\n                            <Typography\r\n                                style={{ lineHeight: '1rem' }}\r\n                                variant=\"caption\"\r\n                            >\r\n                                {Plot}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default Info;\r\n",{"ruleId":"39","severity":1,"message":"40","line":35,"column":8,"nodeType":"41","endLine":35,"endColumn":21,"suggestions":"42"},{"ruleId":"43","severity":1,"message":"44","line":38,"column":25,"nodeType":"45","messageId":"46","endLine":38,"endColumn":27},{"ruleId":"43","severity":1,"message":"47","line":14,"column":32,"nodeType":"45","messageId":"46","endLine":14,"endColumn":34},{"ruleId":"48","severity":1,"message":"49","line":39,"column":33,"nodeType":"50","endLine":39,"endColumn":76},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadMovies'. Either include it or remove the dependency array.","ArrayExpression",["51"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"52","fix":"53"},"Update the dependencies array to be: [loadMovies, searchTerms]",{"range":"54","text":"55"},[1242,1255],"[loadMovies, searchTerms]"]